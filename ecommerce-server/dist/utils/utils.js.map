{"version":3,"sources":["../../src/utils/utils.js"],"names":["util","require","logger","initialData","SKU","successResponse","response","message","data","status","send","success","timestamp","Date","now","errorResponse","verifyAccessToken","request","next","serverHeader","headers","initSKU","number","countDocuments","addSKUs","getSKUs","info","find","promisify","skus","cleanUpSKUs","deleteMany","forEach","sku","name","price","img","save","err","error","upsertSKUs","items","filter","update","doc","findOne","oldPrice","findOneAndUpdate","new","upsert","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst util = require('util');\nconst logger = require('../logger/logger');\nconst initialData = require('../models/initialdata');\nconst SKU = require('../models/sku');\n\n/**\n * Enriched Success response for the client\n * @param {response} request from the client app\n * @param {message} message string for the client app\n * @param {data} response object for the client app\n * @return {response object}\n */\n\nconst successResponse = (response, message = null, data = null) => {\n  response.status(200).send({\n    success: true,\n    timestamp: Date.now(),\n    message,\n    data,\n  });\n};\n\n/**\n * Enriched error response for the client\n * @param {response} request from the client app\n * @param {message} message string for the client app\n * @param {status} 403 status for the client app\n * @return {response object}\n */\n\nconst errorResponse = (response, message, status = 403, data = null) => {\n  response.status(status).send({\n    success: false,\n    timestamp: Date.now(),\n    message,\n    data\n  });\n};\n\n/**\n * FORMAT OF TOKEN x-access-token\n * @param {response} request from the client app\n * @param {message} message string for the client app\n * @param {status} 403 status for the client app\n * @return {response object}\n */\n\nconst verifyAccessToken = (request, response, next) => {\n  // Get auth header value\n  // eslint-disable-next-line space-infix-ops\n  const serverHeader = request.headers['x-access-token'];\n\n  // Check if server is undefined\n  if (typeof serverHeader !== 'undefined') {\n    if (serverHeader === 'sjd1HfkjU83ksdsm3802k') {\n      // Next middleware\n      // eslint-disable-next-line callback-return\n      next();\n    }\n  } else {\n    errorResponse(response, 'Forbidden');\n  }\n};\n\n/**\n Insert SKU with initial data\n */\n\nconst initSKU = async () => {\n  const number = await SKU.countDocuments();\n  if (number <= 0) {\n    await addSKUs();\n  }\n};\n\n/**\n * Retrieve all skus from the MongoDB.\n * @param {request} request from the client app\n * @param {response} response object for the client app\n * @return {response object}\n */\n\nconst getSKUs = async () => {\n  logger.info('[+] SKUs to look from ECommerce Service');\n  SKU.find = util.promisify(SKU.find);\n  let skus = await SKU.find({});\n  return skus;\n};\n\n/**\n * Delete all skus from the MongoDB.\n * @param {request} request from the client app\n * @param {response} response object for the client app\n * @return {response object}\n */\n\nconst cleanUpSKUs = async () => {\n  logger.info('[+] Delete SKUs from ECommerce Service');\n  await SKU.deleteMany();\n};\n\n/**\n * Add new skus from initial data to the MongoDB.\n * @param {request} request from the client app\n * @param {response} response object for the client app\n * @return {response object}\n */\n\nconst addSKUs = async () => {\n  initialData.forEach(async (data) => {\n    logger.info(`[+] ECommerce service added. ${data.sku}, ${data.name}, ${data.price}, ${data.img}`);\n    var sku = new SKU();\n    sku.sku = data.sku;\n    sku.name = data.name;\n    sku.price = data.price;\n    sku.img = data.img;\n    try {\n      await sku.save();\n    } catch (err) {\n      logger.error(`[+] addSKU -- error adding sku ${err}`);\n    }\n  });\n};\n\n/**\n * Add new skus from initial data to the MongoDB.\n * @param {request} request from the client app\n * @param {response} response object for the client app\n * @return {response object}\n */\n\nconst upsertSKUs = async (items) => {\n  items.forEach(async (data) => {\n    logger.info(`[+] ECommerce service to be updated/inserted. ${data.sku}, ${data.price}`);\n    const filter = { sku: data.sku };\n    const update = { price: data.price };\n    try {\n      let doc = await SKU.findOne(filter);\n      let oldPrice = doc.price;\n      doc = await SKU.findOneAndUpdate(filter, update, {\n        new: true,\n        upsert: true // Make this update into an upsert\n      });\n      doc = await SKU.findOne(filter);\n      logger.info(`[+] ${data.sku} old price was ${oldPrice} and now, new price is ${doc.price} `);\n    } catch (err) {\n      logger.error(`[+] addSKU -- error adding sku ${err}`);\n    }\n  });\n};\n\nexports.successResponse = successResponse;\nexports.errorResponse = errorResponse;\nexports.verifyAccessToken = verifyAccessToken;\nexports.initSKU = initSKU;\nexports.cleanUpSKUs = cleanUpSKUs;\nexports.getSKUs = getSKUs;\nexports.addSKUs = addSKUs;\nexports.upsertSKUs = upsertSKUs;\n"],"file":"utils.js"}