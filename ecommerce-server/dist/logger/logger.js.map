{"version":3,"sources":["../../src/logger/logger.js"],"names":["createLogger","format","transports","require","packageJson","combine","timestamp","label","printf","colorize","defaultFormat","level","message","logger","name","Console","File","filename","add","simple","module","exports"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA,YAAF;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA;AAAxB,IAAuCC,OAAO,CAAC,SAAD,CAApD;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAA3B;;AAEA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA,MAA7B;AAAqCC,EAAAA;AAArC,IAAkDR,MAAxD;AACA,MAAMS,aAAa,GAAGF,MAAM,CAAC,UAA0C;AAAA,MAAzC;AAAEG,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBL,IAAAA,KAAlB;AAAyBD,IAAAA;AAAzB,GAAyC;AACrE,oBAAWC,KAAX,mBAAyBI,KAAzB,iBAAqCL,SAArC,iBAAqDM,OAArD;AACD,CAF2B,CAA5B;AAIA,MAAMC,MAAM,GAAGb,YAAY,CAAC;AAC1BC,EAAAA,MAAM,EAAEI,OAAO,CAACE,KAAK,CAAC;AAAEA,IAAAA,KAAK,EAAEH,WAAW,CAACU;AAArB,GAAD,CAAN,EAAqCR,SAAS,EAA9C,EAAkDI,aAAlD,EAAiED,QAAQ,EAAzE,CADW;AAE1BP,EAAAA,UAAU,EAAE,CACV;;AACA;;;;;;;;AAQA;AACA,MAAIA,UAAU,CAACa,OAAf,CAAuB;AAAEJ,IAAAA,KAAK,EAAE;AAAT,GAAvB,CAXU,EAWkC;AAC5C,MAAIT,UAAU,CAACc,IAAf,CAAoB;AAClBC,IAAAA,QAAQ,mBAAYb,WAAW,CAACU,IAAxB,cAAgCV,WAAW,CAACU,IAA5C,kBADU;AAElBH,IAAAA,KAAK,EAAE;AAFW,GAApB,CAZU,EAgBV,IAAIT,UAAU,CAACc,IAAf,CAAoB;AAClBC,IAAAA,QAAQ,mBAAYb,WAAW,CAACU,IAAxB,cAAgCV,WAAW,CAACU,IAA5C,eADU;AAElBH,IAAAA,KAAK,EAAE;AAFW,GAApB,CAhBU;AAFc,CAAD,CAA3B;AAyBAE,MAAM,CAACK,GAAP,CACE,IAAIhB,UAAU,CAACa,OAAf,CAAuB;AACrBd,EAAAA,MAAM,EAAEA,MAAM,CAACkB,MAAP,EADa;AAErBR,EAAAA,KAAK,EAAE;AAFc,CAAvB,CADF;AAOAS,MAAM,CAACC,OAAP,GAAiBR,MAAjB","sourcesContent":["'use strict';\nconst { createLogger, format, transports } = require('winston');\nconst packageJson = require('../../package.json');\n\nconst { combine, timestamp, label, printf, colorize } = format;\nconst defaultFormat = printf(({ level, message, label, timestamp }) => {\n  return `[${label}]  <  ${level} >  ${timestamp} |  ${message}`;\n});\n\nconst logger = createLogger({\n  format: combine(label({ label: packageJson.name }), timestamp(), defaultFormat, colorize()),\n  transports: [\n    // eslint-disable-next-line lines-around-comment\n    /* {\n      error: 0,\n      warn: 1,\n      info: 2,\n      verbose: 3,\n      debug: 4,\n      silly: 5\n    } */\n    // eslint-disable-next-line no-inline-comments\n    new transports.Console({ level: 'debug' }), // warnings and errors\n    new transports.File({\n      filename: `./logs/${packageJson.name}/${packageJson.name}_combined.log`,\n      level: 'debug',\n    }),\n    new transports.File({\n      filename: `./logs/${packageJson.name}/${packageJson.name}_error.log`,\n      level: 'error',\n    }),\n  ],\n});\n\nlogger.add(\n  new transports.Console({\n    format: format.simple(),\n    level: 'error',\n  })\n);\n\nmodule.exports = logger;\n"],"file":"logger.js"}