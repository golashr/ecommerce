{"version":3,"sources":["../../src/components/db.js"],"names":["mongoose","require","logger","exports","connect","DB_URI","Promise","resolve","useNewUrlParser","useCreateIndex","useFindAndModify","useUnifiedTopology","then","catch","err","error","process","exit","close","connection","dropDatabase","db"],"mappings":"AAAA;;;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAAtB;AAEA;;;;;;AAKAE,OAAO,CAACC,OAAR,GAAmBC,MAAD,IAAY;AAC5B,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BP,IAAAA,QAAQ,CACLI,OADH,CACWC,MADX,EACmB;AACfG,MAAAA,eAAe,EAAE,IADF;AAEfC,MAAAA,cAAc,EAAE,IAFD;AAGfC,MAAAA,gBAAgB,EAAE,KAHH;AAIfC,MAAAA,kBAAkB,EAAE;AAJL,KADnB,EAOGC,IAPH,CAOQ,MAAM;AACVL,MAAAA,OAAO;AACR,KATH,EAUGM,KAVH,CAUUC,GAAD,IAAS;AACdZ,MAAAA,MAAM,CAACa,KAAP,4CAAiDV,MAAjD,yBAAsES,GAAtE;AACAE,MAAAA,OAAO,CAACC,IAAR;AACD,KAbH;AAcD,GAfM,CAAP;AAgBD,CAjBD;AAmBA;;;;;AAIAd,OAAO,CAACe,KAAR,GAAgB,YAAY;AAC1B,SAAO,MAAMlB,QAAQ,CAACmB,UAAT,CAAoBD,KAApB,CAA0B,KAA1B,CAAb;AACD,CAFD;AAIA;;;;;AAIAf,OAAO,CAACiB,YAAR,GAAuB,YAAY;AACjC,SAAO,MAAMpB,QAAQ,CAACmB,UAAT,CAAoBE,EAApB,CAAuBD,YAAvB,EAAb;AACD,CAFD","sourcesContent":["'use strict';\nconst mongoose = require('mongoose');\nconst logger = require('../logger/logger');\n\n/**\n * Connect with the MongoDB with given DB_URI\n * @param {DB_URI}\n */\n\nexports.connect = (DB_URI) => {\n  return new Promise((resolve) => {\n    mongoose\n      .connect(DB_URI, {\n        useNewUrlParser: true,\n        useCreateIndex: true,\n        useFindAndModify: false,\n        useUnifiedTopology: true,\n      })\n      .then(() => {\n        resolve();\n      })\n      .catch((err) => {\n        logger.error(`[+] Failed to connect to MongoDB ${DB_URI} with error ${err}`);\n        process.exit();\n      });\n  });\n};\n\n/** Close the MongoDB connection.\n * @return {promise}\n */\n\nexports.close = async () => {\n  return await mongoose.connection.close(false);\n};\n\n/** dropDatabase the MongoDB connection.\n * @return {promise}\n */\n\nexports.dropDatabase = async () => {\n  return await mongoose.connection.db.dropDatabase();\n};\n"],"file":"db.js"}